This projects specifications are as follows:
This project simulates creating an online account for a website. The program asks a user to enter their username, email address, and password.  Then it verifies the correct formatting of each of these pieces of data, and either reports success or reports the first error and exits.
You will write or complete five functions. The formatting rules for the username, email, and password are found in the functions.c file in the documentation block for each function.
The text of the error messages is found in the header file functions.h
If the user enters an invalid username, email address, or password the function should print the appropriate error message and return 0.  We have written all the print statements for you.  The grading script uses exact output text matching.  If you change the error messages or print extra text your code will fail the tests in the grading script.
The code should test the username, email address, and password and only report the first error message.  Do not report everything wrong with an item, only the first error.  The error messages are listed in order for you in the functions.h file.
For example, the username must begin with a letter [A-Z, a-z], have a maximum of 32 characters, and may only contain letters, digits, or the underscore [A-Z, a-z, 0-9, _].  These conditions are tested in this order, so if the username is “CS354isThe_Best_Most_AwesomeClass!@#$%^&*(Ever)!!!”. The first test will pass (this should not generate any output), but the second test will fail because the username has 50 characters. When the second test fails, the output “Max 32 characters” is printed, the function returns 0.  The “Invalid character in username” error message is never printed.
If the tests pass, then a success message is printed.
All messages printed on the screen have been written for you!  We test your code using exact match output testing. If you change any of the messages, the tests will fail to match.
The only libraries that you may use have already been included in the provided files. Do not add additional libraries including string.h. While the standard libraries may be a good source of inspiration on how to approach some of the tasks in this assignment, ultimately all the string manipulation code you write must be your own. The goal of this project is to gain experience working with C programming C style arrays.
